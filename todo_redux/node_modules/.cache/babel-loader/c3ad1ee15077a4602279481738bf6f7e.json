{"ast":null,"code":"var _jsxFileName = \"/Users/jakdu/react-tutorial/react-django-lesson/\\uAC15\\uC0AC\\uB2D8\\uB2F5\\uC9C0/todo_redux/src/components/TodoItemList/TodoItemList.js\";\nimport React, { Component } from 'react';\nimport TodoItem from '../TodoItem'; // 관례 - 관례는 남의 코드를 잘 이해하려고, 내 코드를 남이 이해하기 쉽게\n// 보통은 상태값을 구독하는 대상은 컨테이너\n// 상태값을 표현해야되는 대상은 컨테이너 안에 컴포넌트\n\nimport { connect } from 'react-redux'; // 상태값을 구독하려고\n\nimport { bindActionCreators } from 'redux'; // 액션을 발생시키려고(상태값을 변경하려고)\n\nimport * as itemActions from '../../modules/item'; // 구체적인 액션\n\nclass TodoItemList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.completeHandler = id => {\n      const {\n        ItemActions\n      } = this.props;\n      ItemActions.complete(id);\n    };\n\n    this.deleteHandler = id => {\n      const {\n        ItemActions\n      } = this.props;\n      ItemActions.del(id);\n    };\n  }\n\n  render() {\n    const {\n      todo_list\n    } = this.props;\n    const {\n      completeHandler,\n      deleteHandler\n    } = this;\n    const todoItems = todo_list.map(todo_item => {\n      const {\n        id,\n        complete,\n        content\n      } = todo_item.toJS(); // const id = todo_item.get('id');\n      // const complete = todo_item.get('complete');\n      // const content = todo_item.get('content');\n\n      return /*#__PURE__*/React.createElement(TodoItem, {\n        deleteHandler: () => deleteHandler(id),\n        completeHandler: () => completeHandler(id),\n        complete: complete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, content);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, todoItems);\n  }\n\n} //export default TodoItemList;\n\n\nexport default connect(state => ({\n  todo_list: state.todo_list\n}), dispatch => ({\n  ItemActions: bindActionCreators(itemActions, dispatch)\n}))(TodoItemList);","map":{"version":3,"sources":["/Users/jakdu/react-tutorial/react-django-lesson/강사님답지/todo_redux/src/components/TodoItemList/TodoItemList.js"],"names":["React","Component","TodoItem","connect","bindActionCreators","itemActions","TodoItemList","completeHandler","id","ItemActions","props","complete","deleteHandler","del","render","todo_list","todoItems","map","todo_item","content","toJS","state","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CACA;AACA;AACA;;AAEA,SAAQC,OAAR,QAAsB,aAAtB,C,CAAqC;;AAErC,SAAQC,kBAAR,QAAiC,OAAjC,C,CAA0C;;AAC1C,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B,C,CAAmD;;AAEnD,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAEjCM,eAFiC,GAEdC,EAAD,IAAQ;AACtB,YAAM;AAACC,QAAAA;AAAD,UAAgB,KAAKC,KAA3B;AACAD,MAAAA,WAAW,CAACE,QAAZ,CAAqBH,EAArB;AACH,KALgC;;AAAA,SAOjCI,aAPiC,GAOhBJ,EAAD,IAAQ;AACpB,YAAM;AAACC,QAAAA;AAAD,UAAgB,KAAKC,KAA3B;AACAD,MAAAA,WAAW,CAACI,GAAZ,CAAgBL,EAAhB;AACH,KAVgC;AAAA;;AAYjCM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKL,KAA3B;AACA,UAAM;AAACH,MAAAA,eAAD;AAAkBK,MAAAA;AAAlB,QAAmC,IAAzC;AACA,UAAMI,SAAS,GAAGD,SAAS,CAACE,GAAV,CAAeC,SAAD,IAAe;AAC3C,YAAM;AAAEV,QAAAA,EAAF;AAAMG,QAAAA,QAAN;AAAgBQ,QAAAA;AAAhB,UAA4BD,SAAS,CAACE,IAAV,EAAlC,CAD2C,CAE3C;AACA;AACA;;AACA,0BACI,oBAAC,QAAD;AAAU,QAAA,aAAa,EAAE,MAAMR,aAAa,CAACJ,EAAD,CAA5C;AACA,QAAA,eAAe,EAAE,MAAMD,eAAe,CAACC,EAAD,CADtC;AAEA,QAAA,QAAQ,EAAEG,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIKQ,OAJL,CADJ;AAQH,KAbiB,CAAlB;AAcA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMH,SAAN,CAAP;AACH;;AA9BgC,C,CAiCrC;;;AACA,eAAeb,OAAO,CACjBkB,KAAD,KAAY;AACRN,EAAAA,SAAS,EAACM,KAAK,CAACN;AADR,CAAZ,CADkB,EAIjBO,QAAD,KAAe;AACXb,EAAAA,WAAW,EAAEL,kBAAkB,CAACC,WAAD,EAAciB,QAAd;AADpB,CAAf,CAJkB,CAAP,CAObhB,YAPa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport TodoItem from '../TodoItem';\n// 관례 - 관례는 남의 코드를 잘 이해하려고, 내 코드를 남이 이해하기 쉽게\n// 보통은 상태값을 구독하는 대상은 컨테이너\n// 상태값을 표현해야되는 대상은 컨테이너 안에 컴포넌트\n\nimport {connect} from 'react-redux'; // 상태값을 구독하려고\n\nimport {bindActionCreators} from 'redux'; // 액션을 발생시키려고(상태값을 변경하려고)\nimport * as itemActions from '../../modules/item'; // 구체적인 액션\n\nclass TodoItemList extends Component {\n    // 핸들러 같은거 만들기\n    completeHandler = (id) => {\n        const {ItemActions} = this.props;\n        ItemActions.complete(id);\n    }\n\n    deleteHandler = (id) => {\n        const {ItemActions} = this.props;\n        ItemActions.del(id);\n    }\n\n    render() {\n        const { todo_list } = this.props;\n        const {completeHandler, deleteHandler} = this;\n        const todoItems = todo_list.map((todo_item) => {\n            const { id, complete, content } = todo_item.toJS();\n            // const id = todo_item.get('id');\n            // const complete = todo_item.get('complete');\n            // const content = todo_item.get('content');\n            return (\n                <TodoItem deleteHandler={() => deleteHandler(id)}\n                completeHandler={() => completeHandler(id)}\n                complete={complete}\n                >\n                    {content}\n                </TodoItem>\n            );\n        });\n        return <div>{todoItems}</div>;\n    }\n}\n\n//export default TodoItemList;\nexport default connect(\n    (state) => ({\n        todo_list:state.todo_list\n    }),\n    (dispatch) => ({\n        ItemActions: bindActionCreators(itemActions, dispatch)\n    })\n)(TodoItemList);"]},"metadata":{},"sourceType":"module"}