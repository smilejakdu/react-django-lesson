{"ast":null,"code":"var _jsxFileName = \"/Users/jakdu/react-tutorial/react-django-lesson/class01_src/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport PageLayout from \"./PageLayout\";\nimport TodoInsertForm from \"./TodoInsertForm\";\nimport TodoItemList from \"./TodoItemList\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: \"\",\n      todo_list: []\n    };\n\n    this.changeHandler = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        input: value\n      });\n      console.log(\"value chagned\");\n    };\n\n    this.id = 0;\n\n    this.getItemId = () => {\n      return this.id++;\n    };\n\n    this.insertHandler = e => {\n      // 할일을 추가\n      const {\n        todo_list,\n        input\n      } = this.state;\n      const new_item = {\n        content: input,\n        complete: false,\n        id: this.getItemId()\n      };\n      this.setState({\n        input: \"\",\n        todo_list: [...todo_list, new_item]\n      });\n    };\n\n    this.deleteHandler = id => {\n      // state : 어떤 값, 내용\n      // state는 직접 변수에 접근해서 수정하면 안된다.\n      const {\n        todo_list\n      } = this.state;\n      const index = todo_list.findIndex(todo_item => todo_item.id === id);\n      this.setState({\n        todo_list: [...todo_list.slice(0, index), ...todo_list.slice(index + 1, todo_list.length)]\n      });\n    };\n\n    this.completeHandler = id => {\n      const {\n        todo_list\n      } = this.state;\n      const index = todo_list.findIndex(todo_item => todo_item.id === id);\n    };\n  }\n\n  render() {\n    const {\n      input,\n      todo_list\n    } = this.state; // const input = this.state.input;\n\n    const {\n      changeHandler,\n      insertHandler,\n      deleteHandler\n    } = this;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, \"Hello React\", /*#__PURE__*/React.createElement(PageLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TodoInsertForm, {\n      insertHandler: insertHandler,\n      onChange: changeHandler,\n      value: input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TodoItemList, {\n      todo_list: todo_list,\n      deleteHandler: deleteHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jakdu/react-tutorial/react-django-lesson/class01_src/src/components/App.js"],"names":["React","Component","PageLayout","TodoInsertForm","TodoItemList","App","state","input","todo_list","changeHandler","e","value","target","setState","console","log","id","getItemId","insertHandler","new_item","content","complete","deleteHandler","index","findIndex","todo_item","slice","length","completeHandler","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PageLayout from \"./PageLayout\";\nimport TodoInsertForm from \"./TodoInsertForm\";\nimport TodoItemList from \"./TodoItemList\";\n\nclass App extends Component {\n  // 컴포넌트 동작을 위해 필요한 기능 함수, 변수\n  state = {\n    input: \"\",\n    todo_list: [],\n  };\n\n  // 키보드로 입력을 할 때 (바뀐 입력 내용)을 -> 어딘가에 저장하려면\n  changeHandler = (e) => {\n    const { value } = e.target;\n    this.setState({\n      input: value,\n    });\n    console.log(\"value chagned\");\n  };\n  id = 0;\n\n  getItemId = () => {\n    return this.id++;\n  };\n  insertHandler = (e) => {\n    // 할일을 추가\n    const { todo_list, input } = this.state;\n    const new_item = {\n      content: input,\n      complete: false,\n      id: this.getItemId(),\n    };\n    this.setState({\n      input: \"\",\n      todo_list: [...todo_list, new_item],\n    });\n  };\n\n  deleteHandler = (id) => {\n    // state : 어떤 값, 내용\n    // state는 직접 변수에 접근해서 수정하면 안된다.\n    const { todo_list } = this.state;\n    const index = todo_list.findIndex((todo_item) => todo_item.id === id);\n\n    this.setState({\n      todo_list: [\n        ...todo_list.slice(0, index),\n        ...todo_list.slice(index + 1, todo_list.length),\n      ],\n    });\n  };\n\n  completeHandler = (id) => {\n    const { todo_list } = this.state;\n    const index = todo_list.findIndex((todo_item) => todo_item.id === id);\n  };\n\n  render() {\n    const { input, todo_list } = this.state;\n    // const input = this.state.input;\n    const { changeHandler, insertHandler, deleteHandler } = this;\n    return (\n      <div>\n        Hello React\n        <PageLayout>\n          <TodoInsertForm\n            insertHandler={insertHandler}\n            onChange={changeHandler}\n            value={input}\n          />\n          <TodoItemList todo_list={todo_list} deleteHandler={deleteHandler} />\n        </PageLayout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}