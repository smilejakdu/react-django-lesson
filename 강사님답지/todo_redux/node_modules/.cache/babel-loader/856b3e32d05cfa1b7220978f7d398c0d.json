{"ast":null,"code":"var _jsxFileName = \"/Users/jakdu/react-tutorial/react-django-lesson/\\uAC15\\uC0AC\\uB2D8\\uB2F5\\uC9C0/todo_redux/src/components/TodoItemList/TodoItemList.js\";\nimport React, { Component } from \"react\";\nimport TodoItem from \"../TodoItem\"; // 관례 - 관례는 남의 코드를 잘 이해하려고, 내 코드를 남이 이해하기 쉽게\n// 보통은 상태값을 구독하는 대상은 컨테이너\n// 상태값을 표현해야되는 대상은 컨테이너 안에 컴포넌트\n\nimport { connect } from \"react-redux\"; // 상태값을 구독하려고\n\nimport { bindActionCreators } from \"redux\"; // 액션을 발생시키려고(상태값을 변경하려고)\n\nimport * as itemActions from \"../../modules/item\"; // 구체적인 액션\n\nclass TodoItemList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.completeHandler = id => {\n      const {\n        ItemActions\n      } = this.props;\n      ItemActions.complete(id);\n    };\n\n    this.deleteHandler = id => {\n      const {\n        ItemActions\n      } = this.props;\n      ItemActions.del(id);\n    };\n  }\n\n  render() {\n    const {\n      todo_list\n    } = this.props;\n    const {\n      completeHandler,\n      deleteHandler\n    } = this;\n    const todoItems = todo_list.map(todo_item => {\n      const {\n        id,\n        complete,\n        content,\n        meaning\n      } = todo_item.toJS(); // const id = todo_item.get('id');\n      // const complete = todo_item.get('complete');\n      // const content = todo_item.get('content');\n\n      return /*#__PURE__*/React.createElement(TodoItem, {\n        key: id,\n        deleteHandler: () => deleteHandler(id),\n        completeHandler: () => completeHandler(id),\n        complete: complete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, content), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, meaning));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    }, todoItems);\n  }\n\n} //export default TodoItemList;\n\n\nexport default connect(state => ({\n  todo_list: state.todo_list\n}), dispatch => ({\n  ItemActions: bindActionCreators(itemActions, dispatch)\n}))(TodoItemList);","map":{"version":3,"sources":["/Users/jakdu/react-tutorial/react-django-lesson/강사님답지/todo_redux/src/components/TodoItemList/TodoItemList.js"],"names":["React","Component","TodoItem","connect","bindActionCreators","itemActions","TodoItemList","completeHandler","id","ItemActions","props","complete","deleteHandler","del","render","todo_list","todoItems","map","todo_item","content","meaning","toJS","state","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CACA;AACA;AACA;;AAEA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;;AAEvC,SAASC,kBAAT,QAAmC,OAAnC,C,CAA4C;;AAC5C,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B,C,CAAmD;;AAEnD,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAEnCM,eAFmC,GAEhBC,EAAD,IAAQ;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKC,KAA7B;AACAD,MAAAA,WAAW,CAACE,QAAZ,CAAqBH,EAArB;AACD,KALkC;;AAAA,SAOnCI,aAPmC,GAOlBJ,EAAD,IAAQ;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKC,KAA7B;AACAD,MAAAA,WAAW,CAACI,GAAZ,CAAgBL,EAAhB;AACD,KAVkC;AAAA;;AAYnCM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKL,KAA3B;AACA,UAAM;AAAEH,MAAAA,eAAF;AAAmBK,MAAAA;AAAnB,QAAqC,IAA3C;AACA,UAAMI,SAAS,GAAGD,SAAS,CAACE,GAAV,CAAeC,SAAD,IAAe;AAC7C,YAAM;AAAEV,QAAAA,EAAF;AAAMG,QAAAA,QAAN;AAAgBQ,QAAAA,OAAhB;AAAyBC,QAAAA;AAAzB,UAAqCF,SAAS,CAACG,IAAV,EAA3C,CAD6C,CAE7C;AACA;AACA;;AACA,0BACE,oBAAC,QAAD;AACE,QAAA,GAAG,EAAEb,EADP;AAEE,QAAA,aAAa,EAAE,MAAMI,aAAa,CAACJ,EAAD,CAFpC;AAGE,QAAA,eAAe,EAAE,MAAMD,eAAe,CAACC,EAAD,CAHxC;AAIE,QAAA,QAAQ,EAAEG,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMQ,OAAN,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMC,OAAN,CAPF,CADF;AAWD,KAhBiB,CAAlB;AAiBA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMJ,SAAN,CAAP;AACD;;AAjCkC,C,CAoCrC;;;AACA,eAAeb,OAAO,CACnBmB,KAAD,KAAY;AACVP,EAAAA,SAAS,EAAEO,KAAK,CAACP;AADP,CAAZ,CADoB,EAInBQ,QAAD,KAAe;AACbd,EAAAA,WAAW,EAAEL,kBAAkB,CAACC,WAAD,EAAckB,QAAd;AADlB,CAAf,CAJoB,CAAP,CAObjB,YAPa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport TodoItem from \"../TodoItem\";\n// 관례 - 관례는 남의 코드를 잘 이해하려고, 내 코드를 남이 이해하기 쉽게\n// 보통은 상태값을 구독하는 대상은 컨테이너\n// 상태값을 표현해야되는 대상은 컨테이너 안에 컴포넌트\n\nimport { connect } from \"react-redux\"; // 상태값을 구독하려고\n\nimport { bindActionCreators } from \"redux\"; // 액션을 발생시키려고(상태값을 변경하려고)\nimport * as itemActions from \"../../modules/item\"; // 구체적인 액션\n\nclass TodoItemList extends Component {\n  // 핸들러 같은거 만들기\n  completeHandler = (id) => {\n    const { ItemActions } = this.props;\n    ItemActions.complete(id);\n  };\n\n  deleteHandler = (id) => {\n    const { ItemActions } = this.props;\n    ItemActions.del(id);\n  };\n\n  render() {\n    const { todo_list } = this.props;\n    const { completeHandler, deleteHandler } = this;\n    const todoItems = todo_list.map((todo_item) => {\n      const { id, complete, content, meaning } = todo_item.toJS();\n      // const id = todo_item.get('id');\n      // const complete = todo_item.get('complete');\n      // const content = todo_item.get('content');\n      return (\n        <TodoItem\n          key={id}\n          deleteHandler={() => deleteHandler(id)}\n          completeHandler={() => completeHandler(id)}\n          complete={complete}\n        >\n          <div>{content}</div>\n          <div>{meaning}</div>\n        </TodoItem>\n      );\n    });\n    return <div>{todoItems}</div>;\n  }\n}\n\n//export default TodoItemList;\nexport default connect(\n  (state) => ({\n    todo_list: state.todo_list,\n  }),\n  (dispatch) => ({\n    ItemActions: bindActionCreators(itemActions, dispatch),\n  })\n)(TodoItemList);\n"]},"metadata":{},"sourceType":"module"}