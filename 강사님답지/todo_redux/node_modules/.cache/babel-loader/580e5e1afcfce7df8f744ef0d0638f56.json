{"ast":null,"code":"// 액션 타입, 액션, 리듀서 - ducks\nimport { Map, List } from \"immutable\";\nimport { handleActions, createAction } from \"redux-actions\"; // 액션 타입 만들기\n// 모듈명/액션명\n\nconst FORM_CHANGE = \"form/FORM_CHANGE\";\nconst MEANING_CHANGE = \"form/MEANING_CHANGE\"; // signup/FORM_CHANGE - namespace\n// 액션 만들기\n\nexport const formChange = createAction(FORM_CHANGE);\nexport const meaningChange = createAction(MEANING_CHANGE); // 기본값 - 해당 액션과 리듀서가 관계를 맺을 상태값\n\nconst initState = Map({\n  value: \"\",\n  meaning: \"\"\n}); // html에서 form input type='text' 데 입력한 값 value property\n// 리듀서 만들기 - 리듀서를 불러다 쓰기 편하게 store라는 곳에 하나로 합칠\n\nexport default handleActions({\n  [FORM_CHANGE]: (state, action) => {\n    // 해당 액션이 발생하면 어떤 상태값을 어떻게할꺼야?\n    console.log(\"value :\", action.payload);\n    return state.set(\"value\", action.payload);\n  },\n  [MEANING_CHANGE]: (state, action) => {\n    console.log(\"meaning : \", action.payload);\n    return state.set(\"meaning\", action.payload);\n  }\n}, initState);","map":{"version":3,"sources":["/Users/jakdu/react-tutorial/react-django-lesson/강사님답지/todo_redux/src/modules/form.js"],"names":["Map","List","handleActions","createAction","FORM_CHANGE","MEANING_CHANGE","formChange","meaningChange","initState","value","meaning","state","action","console","log","payload","set"],"mappings":"AAAA;AACA,SAASA,GAAT,EAAcC,IAAd,QAA0B,WAA1B;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,eAA5C,C,CAEA;AACA;;AACA,MAAMC,WAAW,GAAG,kBAApB;AACA,MAAMC,cAAc,GAAG,qBAAvB,C,CACA;AAEA;;AACA,OAAO,MAAMC,UAAU,GAAGH,YAAY,CAACC,WAAD,CAA/B;AACP,OAAO,MAAMG,aAAa,GAAGJ,YAAY,CAACE,cAAD,CAAlC,C,CAEP;;AACA,MAAMG,SAAS,GAAGR,GAAG,CAAC;AACpBS,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,OAAO,EAAE;AAFW,CAAD,CAArB,C,CAKA;AAEA;;AACA,eAAeR,aAAa,CAC1B;AACE,GAACE,WAAD,GAAe,CAACO,KAAD,EAAQC,MAAR,KAAmB;AAChC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAM,CAACG,OAA9B;AACA,WAAOJ,KAAK,CAACK,GAAN,CAAU,OAAV,EAAmBJ,MAAM,CAACG,OAA1B,CAAP;AACD,GALH;AAME,GAACV,cAAD,GAAkB,CAACM,KAAD,EAAQC,MAAR,KAAmB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAAM,CAACG,OAAjC;AACA,WAAOJ,KAAK,CAACK,GAAN,CAAU,SAAV,EAAqBJ,MAAM,CAACG,OAA5B,CAAP;AACD;AATH,CAD0B,EAY1BP,SAZ0B,CAA5B","sourcesContent":["// 액션 타입, 액션, 리듀서 - ducks\nimport { Map, List } from \"immutable\";\nimport { handleActions, createAction } from \"redux-actions\";\n\n// 액션 타입 만들기\n// 모듈명/액션명\nconst FORM_CHANGE = \"form/FORM_CHANGE\";\nconst MEANING_CHANGE = \"form/MEANING_CHANGE\";\n// signup/FORM_CHANGE - namespace\n\n// 액션 만들기\nexport const formChange = createAction(FORM_CHANGE);\nexport const meaningChange = createAction(MEANING_CHANGE);\n\n// 기본값 - 해당 액션과 리듀서가 관계를 맺을 상태값\nconst initState = Map({\n  value: \"\",\n  meaning: \"\",\n});\n\n// html에서 form input type='text' 데 입력한 값 value property\n\n// 리듀서 만들기 - 리듀서를 불러다 쓰기 편하게 store라는 곳에 하나로 합칠\nexport default handleActions(\n  {\n    [FORM_CHANGE]: (state, action) => {\n      // 해당 액션이 발생하면 어떤 상태값을 어떻게할꺼야?\n      console.log(\"value :\", action.payload);\n      return state.set(\"value\", action.payload);\n    },\n    [MEANING_CHANGE]: (state, action) => {\n      console.log(\"meaning : \", action.payload);\n      return state.set(\"meaning\", action.payload);\n    },\n  },\n  initState\n);\n"]},"metadata":{},"sourceType":"module"}