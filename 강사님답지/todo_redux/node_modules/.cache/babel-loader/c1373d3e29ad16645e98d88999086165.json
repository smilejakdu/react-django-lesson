{"ast":null,"code":"var _jsxFileName = \"/Users/jakdu/react-tutorial/react-django-lesson/\\uAC15\\uC0AC\\uB2D8\\uB2F5\\uC9C0/todo_redux/src/containers/TodoInsertFormContainer.js\";\nimport React, { Component } from \"react\";\nimport TodoInsertForm from \"../components/TodoInsertForm\"; // 연결하기 위한\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\"; //\n\nimport * as formActions from \"../modules/form\";\nimport * as itemActions from \"../modules/item\"; // TodoInsertForm 컴포넌트에게 상태값을 전달해줄 컨테이너\n\nclass TodoInsertFormContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 0;\n\n    this.getItemId = () => {\n      return this.id++;\n    };\n\n    this.changeHandler = e => {\n      const {\n        value\n      } = e.target;\n      const {\n        FormActions\n      } = this.props;\n      FormActions.formChange(value);\n    };\n\n    this.meaningchangeHandler = e => {\n      const {\n        meaning\n      } = e.target;\n      const {\n        FormActions\n      } = this.props;\n    };\n\n    this.insertHandler = e => {\n      // 액션 전달, 값\n      const {\n        value,\n        FormActions,\n        ItemActions\n      } = this.props; // 새로 추가하기\n\n      const new_item = {\n        content: value,\n        complete: false,\n        id: this.getItemId()\n      };\n      ItemActions.add(new_item); // form 비워주기 <--- 방명록 입력창, 댓글 입력창\n\n      FormActions.formChange(\"\");\n    };\n  }\n\n  render() {\n    const {\n      value\n    } = this.props;\n    const {\n      changeHandler,\n      insertHandler\n    } = this;\n    return /*#__PURE__*/React.createElement(TodoInsertForm, {\n      value: value,\n      onChange: changeHandler,\n      insertHandler: insertHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    });\n  }\n\n} // 컨테이너에게 액션을 연결을 한다.\n// 나는 어떤 상태값을 사용하고 있어\n// 나는 어떤 액션이 일어나는 것에 관심이 있어(구독)\n// 1. 나는 어떤 상태값을 변경하고 싶은거냐?\n// value값을 상태값으로 취급하고 싶다.\n// 액션타입, 액션, 리듀서, 구독하고 있는 컨테이너가, 변경을 발생시킬 컨터이너\n// 투두 리스트\n// 투루 리스트를 상태값으로 취급하고 싶다.\n// 새로 추가, complete로 변경, remove삭제\n\n\nexport default connect(state => ({\n  value: state.form.get(\"value\"),\n  meaning: state.form.get(\"meaning\")\n}), dispatch => ({\n  FormActions: bindActionCreators(formActions, dispatch),\n  ItemActions: bindActionCreators(itemActions, dispatch)\n}))(TodoInsertFormContainer);","map":{"version":3,"sources":["/Users/jakdu/react-tutorial/react-django-lesson/강사님답지/todo_redux/src/containers/TodoInsertFormContainer.js"],"names":["React","Component","TodoInsertForm","connect","bindActionCreators","formActions","itemActions","TodoInsertFormContainer","id","getItemId","changeHandler","e","value","target","FormActions","props","formChange","meaningchangeHandler","meaning","insertHandler","ItemActions","new_item","content","complete","add","render","state","form","get","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,8BAA3B,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAEA;;AACA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B,C,CAEA;;AACA,MAAMC,uBAAN,SAAsCN,SAAtC,CAAgD;AAAA;AAAA;AAAA,SAC9CO,EAD8C,GACzC,CADyC;;AAAA,SAG9CC,SAH8C,GAGlC,MAAM;AAChB,aAAO,KAAKD,EAAL,EAAP;AACD,KAL6C;;AAAA,SAO9CE,aAP8C,GAO7BC,CAAD,IAAO;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAYD,CAAC,CAACE,MAApB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKC,KAA7B;AACAD,MAAAA,WAAW,CAACE,UAAZ,CAAuBJ,KAAvB;AACD,KAX6C;;AAAA,SAa9CK,oBAb8C,GAatBN,CAAD,IAAO;AAC5B,YAAM;AAAEO,QAAAA;AAAF,UAAcP,CAAC,CAACE,MAAtB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKC,KAA7B;AACD,KAhB6C;;AAAA,SAkB9CI,aAlB8C,GAkB7BR,CAAD,IAAO;AACrB;AACA,YAAM;AAAEC,QAAAA,KAAF;AAASE,QAAAA,WAAT;AAAsBM,QAAAA;AAAtB,UAAsC,KAAKL,KAAjD,CAFqB,CAGrB;;AACA,YAAMM,QAAQ,GAAG;AACfC,QAAAA,OAAO,EAAEV,KADM;AAEfW,QAAAA,QAAQ,EAAE,KAFK;AAGff,QAAAA,EAAE,EAAE,KAAKC,SAAL;AAHW,OAAjB;AAKAW,MAAAA,WAAW,CAACI,GAAZ,CAAgBH,QAAhB,EATqB,CAUrB;;AACAP,MAAAA,WAAW,CAACE,UAAZ,CAAuB,EAAvB;AACD,KA9B6C;AAAA;;AAgC9CS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA;AAAF,QAAY,KAAKG,KAAvB;AACA,UAAM;AAAEL,MAAAA,aAAF;AAAiBS,MAAAA;AAAjB,QAAmC,IAAzC;AACA,wBACE,oBAAC,cAAD;AACE,MAAA,KAAK,EAAEP,KADT;AAEE,MAAA,QAAQ,EAAEF,aAFZ;AAGE,MAAA,aAAa,EAAES,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AA1C6C,C,CA6ChD;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AAEA,eAAehB,OAAO,CACnBuB,KAAD,KAAY;AACVd,EAAAA,KAAK,EAAEc,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,OAAf,CADG;AAEVV,EAAAA,OAAO,EAAEQ,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,SAAf;AAFC,CAAZ,CADoB,EAKnBC,QAAD,KAAe;AACbf,EAAAA,WAAW,EAAEV,kBAAkB,CAACC,WAAD,EAAcwB,QAAd,CADlB;AAEbT,EAAAA,WAAW,EAAEhB,kBAAkB,CAACE,WAAD,EAAcuB,QAAd;AAFlB,CAAf,CALoB,CAAP,CASbtB,uBATa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport TodoInsertForm from \"../components/TodoInsertForm\";\n\n// 연결하기 위한\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\n//\nimport * as formActions from \"../modules/form\";\nimport * as itemActions from \"../modules/item\";\n\n// TodoInsertForm 컴포넌트에게 상태값을 전달해줄 컨테이너\nclass TodoInsertFormContainer extends Component {\n  id = 0; // 글번호, 키값 시작 번호 1\n  // 직접 코딩할 때는 index번호 0\n  getItemId = () => {\n    return this.id++;\n  };\n\n  changeHandler = (e) => {\n    const { value } = e.target;\n    const { FormActions } = this.props;\n    FormActions.formChange(value);\n  };\n\n  meaningchangeHandler = (e) => {\n    const { meaning } = e.target;\n    const { FormActions } = this.props;\n  };\n\n  insertHandler = (e) => {\n    // 액션 전달, 값\n    const { value, FormActions, ItemActions } = this.props;\n    // 새로 추가하기\n    const new_item = {\n      content: value,\n      complete: false,\n      id: this.getItemId(),\n    };\n    ItemActions.add(new_item);\n    // form 비워주기 <--- 방명록 입력창, 댓글 입력창\n    FormActions.formChange(\"\");\n  };\n\n  render() {\n    const { value } = this.props;\n    const { changeHandler, insertHandler } = this;\n    return (\n      <TodoInsertForm\n        value={value}\n        onChange={changeHandler}\n        insertHandler={insertHandler}\n      />\n    );\n  }\n}\n\n// 컨테이너에게 액션을 연결을 한다.\n// 나는 어떤 상태값을 사용하고 있어\n// 나는 어떤 액션이 일어나는 것에 관심이 있어(구독)\n// 1. 나는 어떤 상태값을 변경하고 싶은거냐?\n\n// value값을 상태값으로 취급하고 싶다.\n// 액션타입, 액션, 리듀서, 구독하고 있는 컨테이너가, 변경을 발생시킬 컨터이너\n\n// 투두 리스트\n// 투루 리스트를 상태값으로 취급하고 싶다.\n// 새로 추가, complete로 변경, remove삭제\n\nexport default connect(\n  (state) => ({\n    value: state.form.get(\"value\"),\n    meaning: state.form.get(\"meaning\"),\n  }),\n  (dispatch) => ({\n    FormActions: bindActionCreators(formActions, dispatch),\n    ItemActions: bindActionCreators(itemActions, dispatch),\n  })\n)(TodoInsertFormContainer);\n"]},"metadata":{},"sourceType":"module"}