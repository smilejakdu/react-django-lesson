{"ast":null,"code":"import { List, Map } from 'immutable';\nimport { handleActions, createAction } from 'redux-actions';\nconst ADD = 'words/ADD';\nconst DEL = 'words/DEL';\nexport const add = createAction(ADD);\nexport const del = createAction(DEL);\nconst initState = List([]);\nexport default handleActions({\n  [ADD]: (state, action) => {\n    const {\n      id,\n      word,\n      meaning\n    } = action.payload;\n    return state.push(Map({\n      id,\n      word,\n      meaning\n    }));\n  },\n  [DEL]: (state, action) => {\n    const {\n      payload: id\n    } = action;\n    return state.filter(word => word.get('id') !== id);\n  }\n}, initState);","map":{"version":3,"sources":["/Users/jakdu/react-tutorial/react-django-lesson/강사님답지/redux_dictionary/src/modules/words.js"],"names":["List","Map","handleActions","createAction","ADD","DEL","add","del","initState","state","action","id","word","meaning","payload","push","filter","get"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,WAA1B;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,eAA5C;AAEA,MAAMC,GAAG,GAAG,WAAZ;AACA,MAAMC,GAAG,GAAG,WAAZ;AAEA,OAAO,MAAMC,GAAG,GAAGH,YAAY,CAACC,GAAD,CAAxB;AACP,OAAO,MAAMG,GAAG,GAAGJ,YAAY,CAACE,GAAD,CAAxB;AAEP,MAAMG,SAAS,GAAGR,IAAI,CAAC,EAAD,CAAtB;AAEA,eAAeE,aAAa,CAAC;AACzB,GAACE,GAAD,GAAM,CAACK,KAAD,EAAQC,MAAR,KAAmB;AACrB,UAAM;AAACC,MAAAA,EAAD;AAAKC,MAAAA,IAAL;AAAWC,MAAAA;AAAX,QAAsBH,MAAM,CAACI,OAAnC;AACA,WAAOL,KAAK,CAACM,IAAN,CAAWd,GAAG,CAAC;AAClBU,MAAAA,EADkB;AAElBC,MAAAA,IAFkB;AAGlBC,MAAAA;AAHkB,KAAD,CAAd,CAAP;AAKH,GARwB;AASzB,GAACR,GAAD,GAAM,CAACI,KAAD,EAAQC,MAAR,KAAmB;AACrB,UAAM;AAACI,MAAAA,OAAO,EAACH;AAAT,QAAeD,MAArB;AACA,WAAOD,KAAK,CAACO,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACK,GAAL,CAAS,IAAT,MAAiBN,EAAtC,CAAP;AACH;AAZwB,CAAD,EAazBH,SAbyB,CAA5B","sourcesContent":["import { List, Map } from 'immutable';\nimport { handleActions, createAction } from 'redux-actions';\n\nconst ADD = 'words/ADD';\nconst DEL = 'words/DEL';\n\nexport const add = createAction(ADD);\nexport const del = createAction(DEL);\n\nconst initState = List([]);\n\nexport default handleActions({\n    [ADD]:(state, action) => {\n        const {id, word, meaning} = action.payload;\n        return state.push(Map({\n            id,\n            word,\n            meaning\n        }));\n    },\n    [DEL]:(state, action) => {\n        const {payload:id} = action;\n        return state.filter(word => word.get('id')!==id);\n    },\n}, initState);"]},"metadata":{},"sourceType":"module"}